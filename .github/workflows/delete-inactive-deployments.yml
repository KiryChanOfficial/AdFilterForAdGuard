name: Force Delete All Deployments (Reliable)

on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Get deployments via GitHub API
        id: get_deployments
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/deployments > deployments.json

          count=$(jq length deployments.json)
          echo "Found $count deployments."

          if [ "$count" -eq 0 ]; then
            echo "‚úÖ No deployments to delete."
            exit 0
          fi

      - name: Mark deployments inactive and delete
        run: |
          for id in $(jq '.[].id' deployments.json); do
            inactive_at=$(jq ".[] | select(.id == $id) | .inactive_at" deployments.json)

            echo "‚û°Ô∏è Deployment ID: $id | Inactive at: $inactive_at"

            if [ "$inactive_at" = "null" ]; then
              echo "‚ö†Ô∏è Setting deployment $id to inactive..."
              curl -s -X POST \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github+json" \
                -d '{"state":"inactive"}' \
                https://api.github.com/repos/${{ github.repository }}/deployments/$id/statuses
              sleep 2
            fi

            echo "üóë Deleting deployment $id..."
            curl -s -X DELETE \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/deployments/$id
          done

      - name: Cleanup temp file
        run: rm -f deployments.json